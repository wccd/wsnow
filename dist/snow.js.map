{"version":3,"file":"snow.js","mappings":"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","sources":["webpack://snow/webpack/universalModuleDefinition","webpack://snow/webpack/bootstrap","webpack://snow/webpack/runtime/define property getters","webpack://snow/webpack/runtime/hasOwnProperty shorthand","webpack://snow/webpack/runtime/make namespace object","webpack://snow/./src/snow.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"snow\"] = factory();\n\telse\n\t\troot[\"snow\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","class Snow {\r\n    ctx: CanvasRenderingContext2D\r\n    w = 0 // wind\r\n    g = 0 // gravity\r\n    f = 0 // airResistance\r\n    pageW = 0 // page width\r\n    pageH = 0 // page height\r\n    color = '#ffffff'\r\n    opacity = 0\r\n    mixColor = ''\r\n    size = 10\r\n    x = 0 \r\n    y = 0\r\n    xv = 0 \r\n    yv = 0\r\n    xPosition = 0\r\n    yPosition = 0\r\n\r\n    constructor(obj: any) {\r\n        this.ctx = obj.ctx;\r\n        this.g = obj.gravity;\r\n        this.f = obj.airResistance / 2 * Math.PI * obj.size ** 2 * Math.random()\r\n        this.w = obj.wind;\r\n        this.color = obj.color || '#ffffff';\r\n        this.opacity = obj.opacity || 0.95;\r\n        this.size = obj.size || 10;\r\n        this.x = obj.pageWidth * Math.floor(Math.random() * 100) / 100;\r\n        this.y = obj.pageHeight / 2 * Math.floor((Math.random() - 1) * 100) / 100;\r\n        this.xPosition = this.x;\r\n        this.yPosition = this.y;\r\n        this.pageW = obj.pageWidth;\r\n        this.pageH = obj.pageHeight;\r\n        this.getMixColor();\r\n        this.randomPosition();\r\n    }\r\n\r\n    getMixColor() {\r\n        this.mixColor = this.color + Number(this.opacity * 255).toString(16).slice(0, 2)\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = 'transparent';\r\n        ctx.shadowBlur = 5;\r\n        ctx.shadowColor = this.mixColor;\r\n        ctx.fillStyle = this.mixColor;\r\n        ctx.arc(this.xPosition, this.yPosition, this.size, 0, 2 * Math.PI);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        return this\r\n    }\r\n\r\n    getHorizontalV() {\r\n        let a = this.w - this.f * this.xv ** 2;\r\n        if(a < 0) a = 0;\r\n        this.xv += a;\r\n    }\r\n\r\n    getVerticalV() {\r\n        let a = this.g - this.f * this.yv ** 2;\r\n        if(a < 0) a = 0;\r\n        this.yv += a;\r\n    }\r\n    \r\n    checkOverScreen() {\r\n        if(this.yPosition > this.pageH) {\r\n            this.yPosition = this.y;\r\n            this.yv = 0;\r\n            this.xPosition = this.x;\r\n            this.xv = 0;\r\n        }\r\n        if(this.xPosition > this.pageW) {\r\n            this.xPosition -= this.pageW\r\n        }\r\n    }\r\n\r\n    randomPosition() {\r\n        let count = Math.round(Math.random() * 1000);\r\n        for(let i = 0; i < count; i++) {\r\n            this.getHorizontalV();\r\n            this.getVerticalV();\r\n            this.xPosition += this.xv;\r\n            this.yPosition += this.yv;\r\n            this.checkOverScreen();\r\n        }\r\n        this.draw(this.ctx);\r\n    }\r\n\r\n    update() {\r\n        this.getHorizontalV();\r\n        this.getVerticalV();\r\n        this.xPosition += this.xv;\r\n        this.yPosition += this.yv;\r\n        this.checkOverScreen();\r\n        this.draw(this.ctx);\r\n    }\r\n}\r\n\r\nclass WSnow {\r\n    animationKey = 0\r\n    el: HTMLElement\r\n    canvasWidth = 0\r\n    canvasHeight = 0\r\n    canvas: HTMLCanvasElement\r\n    ctx: CanvasRenderingContext2D\r\n    wind = 10\r\n    gravity = 10\r\n    airResistance = .02\r\n    sizeRange = [2, 5]\r\n    snowNum = 100\r\n    snowList: Array<Snow> = []\r\n    snowColor = '#ffffff'\r\n    randomColor: boolean = false\r\n    \r\n    constructor(obj: any) {\r\n        this.el = obj.el;\r\n        if(!this.el) {\r\n            throw console.error('need a htmlnode');\r\n        }\r\n        this.canvas = document.createElement('canvas');\r\n        this.ctx = this.canvas.getContext( '2d' ) as CanvasRenderingContext2D;\r\n        this.canvasWidth = obj.width || 800;\r\n        this.canvasHeight = obj.height || 480;\r\n        this.gravity = obj.gravity / 1000;\r\n        this.wind = obj.wind / 2000;\r\n        this.airResistance = obj.airResistance / 10000;\r\n        this.snowNum = obj.snowNum;\r\n        this.snowColor = obj.snowColor || '#ffffff';\r\n        this.randomColor = obj.randomColor || false;\r\n        this.initCanvas();\r\n        this.initSnow();\r\n    }\r\n\r\n    initCanvas() {\r\n        !this.canvas && (this.canvas = document.createElement('canvas'));\r\n        !this.ctx && (this.ctx = this.canvas.getContext( '2d' ) as CanvasRenderingContext2D);\r\n        this.canvas.width = this.canvasWidth;\r\n        this.canvas.height = this.canvasHeight;\r\n        this.canvas.setAttribute('style', \"pointer-events: none;position: absolute;left: 0;top: 0\");\r\n        this.el.appendChild(this.canvas);\r\n    }\r\n\r\n    randomHexColor() { \r\n        return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);\r\n    }\r\n\r\n    initSnow() {\r\n        for(let i = 0; i < this.snowNum; i++) {\r\n            let size = Math.round(Math.random() * 10) / 10 * (this.sizeRange[1] - this.sizeRange[0]) + this.sizeRange[0];\r\n            let opacity = Math.floor(Math.random() * 100) / 100;\r\n            let snow = new Snow({\r\n                ctx: this.ctx,\r\n                gravity: this.gravity,\r\n                airResistance: this.airResistance,\r\n                wind: this.wind,\r\n                color: this.randomColor ? this.randomHexColor() : this.snowColor,\r\n                opacity,\r\n                size,\r\n                pageWidth: this.canvasWidth,\r\n                pageHeight: this.canvasHeight,\r\n            })\r\n            this.snowList.push(snow)\r\n        }\r\n    }\r\n\r\n    updateSnow() {\r\n        this.ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n        this.snowList.forEach((item: Snow) => {\r\n            item.update();\r\n        })\r\n        this.animationKey = requestAnimationFrame(this.updateSnow.bind(this));\r\n    }\r\n\r\n    start() {\r\n        this.animationKey = requestAnimationFrame(this.updateSnow.bind(this));\r\n    }\r\n\r\n    stop() {\r\n        cancelAnimationFrame(this.animationKey);\r\n    }\r\n\r\n    destory() {\r\n        this.stop();\r\n        this.snowList = [];\r\n        this.el && this.el.removeChild(this.canvas);\r\n    }\r\n\r\n    restart() {\r\n        this.initCanvas();\r\n        this.initSnow();\r\n        this.start();\r\n    }\r\n\r\n    \r\n}\r\nexport default WSnow"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Snow","w","g","f","pageW","pageH","color","opacity","mixColor","size","x","y","xv","yv","xPosition","yPosition","this","ctx","gravity","airResistance","Math","PI","random","wind","pageWidth","floor","pageHeight","getMixColor","randomPosition","Number","toString","slice","beginPath","strokeStyle","shadowBlur","shadowColor","fillStyle","arc","closePath","stroke","fill","a","count","round","i","getHorizontalV","getVerticalV","checkOverScreen","draw","WSnow","animationKey","canvasWidth","canvasHeight","sizeRange","snowNum","snowList","snowColor","randomColor","el","console","error","canvas","document","createElement","getContext","width","height","initCanvas","initSnow","setAttribute","appendChild","substr","snow","randomHexColor","push","clearRect","forEach","item","update","requestAnimationFrame","updateSnow","bind","cancelAnimationFrame","stop","removeChild","start"],"sourceRoot":""}